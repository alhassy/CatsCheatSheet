#+TITLE: Reference Sheet for Elementary Lattice Theory
#+AUTHOR: [[http://www.cas.mcmaster.ca/~alhassm/][Musa Al-hassy]]
#+EMAIL: alhassy@gmail.com
#+DESCRIPTION: This document is written by Musa Al-hassy for his learning in the spring of 2018.
#+STARTUP: hideblocks
#+STARTUP: overview
#+TODO: { BEGIN-IGNORE(b) END-IGNORE(e) } | DONE(d)
#+INCLUDE: CheatSheet/CheatSheetSetup.org
# This file is built around the system https://github.com/alhassy/CheatSheet

* Latex setup                                                        :ignore:

#+BEGIN_EXPORT latex

% from Wolfram Kahl's CalcStyleV9
\def\withrule{\vrule height1.57ex depth0.43ex width0.12em}
\def\with{\kern0.7em \withrule \kern0.7em }

\def\even{ \mathsf{even} \, }
\def\eq{ \;=\; }
\def\lorS{ \quad\lor\quad }
\def\lors{ \;\lor\; }
\def\landS{ \quad\land\quad }
\def\lands{ \;\land\;}

\def\equivS{ \quad\equiv\quad }
\def\equivs{ \;\equiv\;}

\def\eqS{ \quad=\quad }
\def\eqs{ \;=\;}

\def\subseteqs{ \;\subseteq\; }
\def\subseteqS{ \quad\subseteq\quad }

\def\impliesS{ \quad\Rightarrow\quad }
\def\impliess{ \;\Rightarrow\;}
\def\implies{ \Rightarrow }

\def\spot{ \;\bullet\; }

\def\meet{ \;\sqcap\; }
\def\join{ \;\sqcup\; }
\def\sqleq{ \sqsubseteq }
\def\sqleqs{ \;\sqsubseteq\; }

\def\Id{\mathsf{Id}}
\def\true{\mathsf{true}}
\def\false{\mathsf{false}}
\def\fst{\mathsf{fst}}
\def\snd{\mathsf{snd}}

\def\IF #1 : #2 : #3 \FI{ \mathsf{if}\; { #1 } \;\mathsf{then}\; { #2 } \;\mathsf{else}\; { #3 } \;\mathsf{fi} }

\def\RR{\mathbb{R}}
\def\NN{\mathbb{N}}
\def\ZZ{\mathbb{Z}}
\def\22{\mathbf{2}}
\def\11{\mathbf{1}}

\def\notOccurs#1#2{ $\lnot \occurs{#1}{#2}$}
#+END_EXPORT

* Propositional Calculus

+ Metatheorem :: Any two theorems are equivalent; ` $\true$ ' is a theorem.

[[https://ac.els-cdn.com/S0020019000002052/1-s2.0-S0020019000002052-main.pdf?_tid=35e86bb2-edb0-11e7-b1fe-00000aab0f26&acdnat=1514672861_56b3d86466d284cbc76cc2641c47af86][_Equivales_]] is the only equivalence relation that is associative 
\newline $((p \equiv q) \equiv r)\equivs (p \equiv (q \equiv r))$,
and it has identity $\true$.

\vspace{1em}
\underline{Discrepancy} ` $\not\equiv$ ' is symmetric, associative, has identity ` $\false$ ',
mutually associates with equivales $((p \not\equiv q) \equiv r) \equivs (p \not\equiv (q \equiv r))$,
and mutually interchanges with it as well
$(p \not\equiv q \equiv r) \equivs (p \equiv q \not\equiv r)$.

*** implication                                                      :ignore:

\vspace{1em}

\underline{Implication} has the alternative definition $p \implies q \;\equiv\; \lnot p \lor q$,
thus having $\true$ as both left identity and right zero;
it distributes over $\equiv$ in the second argument, and is self-distributive;
and has the properties

# 
#+begin_parallelNB
+ Shunting ::  \invisible{hi}\vspace{-0.5em}
  |$p \land q \implies r \equivS  p \implies (q \implies r)$ |

+ Contrapositive ::  \invisible{hi}\vspace{-0.5em}
  | $p \implies q \quad\equiv\quad \lnot q \implies \lnot p$  |

\columnbreak

+ Modus Ponens :: \invisible{hi}\vspace{-2em}		  
  | $p \land (p \implies q)$ | \equiv   | $p \land q$ |
  | $p \land (q \implies p)$ | \equiv   | $p$         |
  | $p \land (p \implies q)$ | \implies | $q$         |

#+end_parallelNB

It is an order relation generated by `$\false \implies \true$';
whence `from false, follows anything': $\false \implies p$.
Moreover it has the useful property ``(3.62)'': 
 $p \implies (q \equiv r) \equivS p \land q    \equivs    p \land r$.

*** conjunction and disjunction                                      :ignore:
\vspace{1em}
\underline{Conjunction and disjunction} distribute over one another,
$\lor$ distributes over $\equiv$, \\
$\land$ distributes over $\equiv\!-\!\equiv$
in that $p \land (q \equiv r \equiv s) \equivS p \land q \equivs p \land r  \equivs p \land s$,
and they satisfy,

| *Excluded Middle* | *Contradiction*                 | *Absorption*                                | *De Morgan*                                      |
| $p \lor \lnot p$  | $p \land \lnot p \equiv~\false$ | $p \land (\lnot p \lor q) \equiv p \land q$ | $\lnot (p \land q) \equiv \lnot p \lor  \lnot q$ |
|                   |                                 | $p \lor (\lnot p \land q) \equiv p \lor  q$ | $\lnot (p \lor q)  \equiv \lnot p \land \lnot q$ |


**** COMMENT alternate table 
#+begin_parallel3NB

+ Excluded Middle ::  $p \lor \lnot p$

+ Contradiction ::
  #+LaTeX: {hi. \vspace{-2em} $\invisible{Hi! Hello!}~p \land \lnot p \equiv~\false$}
  
  # + \scriptsize Contradiction :: \scriptsize $p \land \lnot p \equiv~\false$
  
\columnbreak
  
+ Absorption :: 
    | $p \land (\lnot p \lor q)$ | \equiv | $p \land q$ |
    | $p \lor (\lnot p \land q)$ | \equiv | $p \lor  q$ |

\columnbreak

+ De Morgan ::
   | $\lnot (p \land q)$ | \equiv | $\lnot p \lor  \lnot q$ |
   | $\lnot (p \lor q)$  | \equiv | $\lnot p \land \lnot q$ |

#+end_parallel3NB

* newpage                                                            :ignore:
\newpage
* Lattices
# Environments
# Our common environments will be the following distributive lattices
The distributive lattice interface $(L, ‚äë, ‚äì, ‚äî, ‚ä•, ‚ä§)$ has the following implementations:

+ Booleans: $(ùîπ, \implies, \land, \lor, \false, \true)$ 
  #+LaTeX: {\hfill\color{red}---Our ambient logic!}
  # Assume this sheet instantiated to this structure.

+ Extended Number Line:  $(\RR, \leq, \min, \max, -\infty, +\infty)$ 

+ Naturals under division: $(\NN, \, |, \mathsf{gcd}, \mathsf{lcm}, 1, 0)$

  # \item Sets : $(\power \ X, \subseteq, \cap, \cup, \emptyset, X)$
+ Substructures of a given /datatype/ with the substructure ordering.
   \newline E.g., sets, lists, and graphs with subset, subsequence, and subgraph ordering.
   # , respectively.
   # I.E.; Subllists/subtrees/subgraphs/$\cdots$ of a given one with subsequence/subtree/subgraph ordering.

# \item Programs ordered by refinement with join being demonic choice % $\framebox(3,10){}$
#   having bottom element be the \verb+ABORT+ program.

\vspace{1em}
An /order/ is a relation $‚äë \,:\, L ‚Üí L ‚Üí ùîπ$  satisfying the following three properties:
| *Reflexivity* | | *Transitivity*                         | | *Antisymmetry*                         |
| $a ‚äë a$     | | $a ‚äë b \lands b ‚äë c \impliess a ‚äë c$ | | $a ‚äë b \lands b ‚äë a \impliess a = b$ |

An order is /bounded/ if there are elements $‚ä§, ‚ä• : L$ being the lower and upper bounds of all other elements:
| *Top Element*      | | *Bottom Element* |
| $a \sqleqs \top$ | | $\bot \sqleqs a$ |

A /lattice/ is a pair of operations $‚äì,\, ‚äî \,:\, L ‚Üí L ‚Üí L$ specified by the properties:
| *‚äî-Characterisation*                     | @@latex: $\qquad$@@ | *‚äì-Characterisation*                     |
| $a ‚äë c \lands b ‚äë c \equivS a ‚äî b ‚äë c$ |                     | $c ‚äë a \lands c ‚äë b \equivS c ‚äë a ‚äì b$ |

The operations act as providing the greatest lower bound, `glb', `supremum', or `meet', by ‚äì;
and the least upper bound, `lub', `infimum', or `join', by ‚äî.

# \hfill{\color{grey}(8.6)}}

Let $\square$ be one of $\meet$ or $\join$, then:
| *Symmetry of ‚ñ°*     | | *Associativity of ‚ñ°*              | | *Idempotency of ‚ñ°* |
| $a ‚ñ° b \eqs b ‚ñ° a$ | |  $(a ‚ñ° b) ‚ñ° c \eqs a ‚ñ° (b ‚ñ° c)$ | | $a ‚ñ° a \eqs a$    |


| *Zero of ‚ñ°*    | *Identity of ‚ñ°* | *Absorption*      | *Self-Distributivity of ‚ñ°* |
|  $a ‚äî ‚ä§ = ‚ä§$    | $a ‚äî ‚ä• = a$    |  $a ‚äì (a ‚äî b) = a$ | $a ‚ñ° (b ‚ñ° c) \eqS (a ‚ñ° b) ‚ñ° (a ‚ñ° c)$ |
|  $a ‚äì ‚ä• = ‚ä•$  | $a ‚äì ‚ä§ = a$      | $a ‚äî (a ‚äì b) = a$ | |


| *Weakening / Strengthening* | *Induced Defs. of Inclusion* | *Golden Rule*                                    |
| $a \;‚äë\; a ‚äî b$             | $a ‚äë b \equivS a ‚äî b \eqs b$ | \hspace{-1em}$a ‚äì b \;=\; a \hspace{1.52em}\equivs b = a ‚äî b$ |
| $a ‚äì b \;‚äë\; a$             | $a ‚äë b \equivS a ‚äì b \eqs a$ | \hspace{-1em}$a ‚äì b \;=\; a ‚äî b \equivs a = b$                |
| $a ‚äì b \;‚äë\; a ‚äî b$         |                              | \hspace{-1em}$a ‚äî b \;‚äë\; a ‚äì b \equivs a = b$                |
| $a ‚äî (b ‚äì c) \;‚äë\; a ‚äî b$ | *Monotonicity of ‚ñ°*         |                                                  |
| $a ‚äì b \;‚äë\; a ‚äì (b ‚äî c)$ | $a ‚äë b \lands c ‚äë d \;\impliess\; a ‚ñ° c \;‚äë\; b ‚ñ° d$ |                             |

# \hfill{\color{grey}(7.9)

#+BEGIN_EXPORT latex
{\small \textbf{Duality Principle:} \\
If a statement $S$ is a theorem, then so is
$S[(\sqleq, \meet, \join, \top, \bot) := (‚äí, \join, \meet, \bot, \top)]$}.
#+END_EXPORT



* COMMENT footer

eval: (setq NAME (buffer-name))
compile-command: (progn (org-latex-export-to-pdf) (eshell-command (concat "evince " NAME ".pdf &")))

# Local Variables:
# eval: (setq NAME (file-name-sans-extension buffer-file-name))
# eval: (setq org-highlight-latex-and-related '(latex))
# eval: (visual-line-mode t)
# eval: (require 'ox-extra)
# eval: (ox-extras-activate '(ignore-headlines))
# eval: (make-variable-buffer-local 'org-structure-template-alist)
# eval: (setq PARALLEL (concat "# \n#+begin_parallel latex \n?\n#+end_parallel"))
# eval: (add-to-list 'org-structure-template-alist `("p" ,PARALLEL))
# eval: (setq TEMPLATE (concat "#+NAME: ?\n#+BEGIN_SRC c :tangle sheet_code.c\n?\n#+END_SRC"))
# eval: (add-to-list 'org-structure-template-alist `("s" ,TEMPLATE))
# compile-command: (progn (org-latex-export-to-pdf) (eshell-command (concat "evince " (file-name-sans-extension buffer-file-name) ".pdf &")))
# org-latex-inputenc-alist: (("utf8" . "utf8x"))
# eval: (setq org-latex-default-packages-alist (cons '("mathletters" "ucs" nil) org-latex-default-packages-alist))
# End:
